# to_sとはオブジェクトの内容を文字列化するメソッド数値を渡しても文字列を渡しても文字列化する
# なお、ここに書かれているものはrubyコマンドでは出力されず、irbを起動して使う
  1.to_s
# nilは何も表記されない
  nil.to_s
  true.to_s
# 式展開の使い方
  name = "Alice"
  puts "hello,#{name}!"

# 文字列の比較
 # 同じかどうか調べる
  "ruby" == "ruby" #=true
  "ruby" == "aa" #=false
 # 異なるか調べる
  "ruby" != "ruby" #=false
  "ruby" != "aa" #=true
  
# 数値について
 # 大きな数値の区切りに便利で出力されることもない(_) 
  10_000_000_000
 # 割り算
  10 / 5
 # 小数点以下は表示されない
  1 / 2 
 #  表示させたい場合どちらかに.0をつける
  1.0 / 2
 # 変数に整数が入っている場合はto_fメソッドを使うことで少数に変更できる
  n = 1
  n.to_f #=1.0
 
 # 割り算のあまりを求める演算子
  8 % 3 #=2
 # 2乗するときなどに使う計算式
  2 ** 3 #=8 2の3乗という意味になる
  
 # 整数に変換するメソッド
 "10".to_i
 
 # 小数の計算にはrを末につけることで丸め誤差というエラーを防ぐ
 0.1 * 3.0 == 0.3 #=false
 0.1r * 3.0r == 0.3 #=true
 
 # &&はすべて正しければtureを返す。途中で誤りがあれば式は途中で終了する
 1 && 2 && 3 #=3が戻り値に
 1 && nil && 3 #=nilが戻り値に
 
 # ||はどれか一つでも正しければtrueを返す。途中で真であることが確定するとそこで式が終了する
 nil || false || 2 || 3 #=2